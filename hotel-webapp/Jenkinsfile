pipeline {
    
    agent any
    
    environment {
    
    	ARTIFACT_ID = readMavenPom().getArtifactId()
    	JAR_NAME = "${ARTIFACT_ID}-${BUILD_NUMBER}"
    	JAR_LOCATION = "target/${JAR_NAME}.jar"

        CONTAINER_REPO = "ghcr.io/javacd-workspace/"
        CONTAINER_REPO_URL = "https://${CONTAINER_REPO}"
    	IMAGE_ID = "${ARTIFACT_ID}:${BUILD_NUMBER}"
        IMAGE_TAG = "${CONTAINER_REPO}${IMAGE_ID}"
        
    }
    
    stages {
    
        stage("Build Java") {
    	   
    	   agent {
    	      docker {
    	      
    	          image "openjdk:11"
    	          reuseNode true
    	      }
    	   }
    	   	       
           steps {
               sh "echo Performing compile, test and package of ${ARTIFACT_ID}..."
               sh "./mvnw -DjarName=${JAR_NAME} clean verify"
           }
            
        }
                
        stage("Build Container Image") {
           
           steps {
               
               sh "echo Building container image of ${IMAGE_ID}..."
               sh "docker build --build-arg JAR_FILE=${JAR_LOCATION} -t ${IMAGE_TAG} ."

           }
            
        }
        
        stage("Store Container Image") {
           
           steps {
               sh "echo Storing container image to ${CONTAINER_REPO_URL}..."
              
              script{
              
                   docker.withRegistry("${CONTAINER_REPO_URL}", "github-pat"){
                       sh "docker push ${IMAGE_TAG}"
                   }
                   
              }                   

           }
            
        }
        
        stage("Invoke CD Pipeline"){
        
        	steps{
        		build(job: '/landon-hotel-application/javacd-deploy-kustomize/main', parameters: [
        			string(name: "IMAGE_TAG", value: "${CONTAINER_REPO}${ARTIFACT_ID}"),
        			string(name: "VERSION", value: "${BUILD_NUMBER}")
        		]);
        	}
        }
        
    }
    
    
}